%hyperhelp title="XML Processing Modules" date="2021-07-11"
*|module-xml:⚓|*

*Source code:* |:github.com/python/cpython/tree/3.8/Lib/xml:Lib/xml/|

======================================================================

Python’s interfaces for processing XML are grouped in the "xml" package.

Warning:

  The XML modules are not secure against erroneous or maliciously constructed
  data.  If you need to parse untrusted or unauthenticated data see the
  |:xml-vulnerabilities:XML vulnerabilities| and |:defusedxml-package:The defusedxml Package| sections.

It is important to note that modules in the |:module-xml:xml| package require that there be
at least one SAX-compliant XML parser available. The Expat parser is included
with Python, so the |:library/pyexpat.txt/module-xml.parsers.expat:xml.parsers.expat| module will always be available.

The documentation for the |:library/xml.dom.txt/module-xml.dom:xml.dom| and |:library/xml.sax.txt/module-xml.sax:xml.sax| packages are the definition of
the Python bindings for the DOM and SAX interfaces.

The XML handling submodules are:

* |:library/xml.etree.elementtree.txt/module-xml.etree.ElementTree:xml.etree.ElementTree|: the ElementTree API, a simple and lightweight XML
  processor

* |:library/xml.dom.txt/module-xml.dom:xml.dom|: the DOM API definition

* |:library/xml.dom.minidom.txt/module-xml.dom.minidom:xml.dom.minidom|: a minimal DOM implementation

* |:library/xml.dom.pulldom.txt/module-xml.dom.pulldom:xml.dom.pulldom|: support for building partial DOM trees

* |:library/xml.sax.txt/module-xml.sax:xml.sax|: SAX2 base classes and convenience functions

* |:library/pyexpat.txt/module-xml.parsers.expat:xml.parsers.expat|: the Expat parser binding

# xml-vulnerabilities:XML vulnerabilities

The XML processing modules are not secure against maliciously constructed data.
An attacker can abuse XML features to carry out denial of service attacks,
access local files, generate network connections to other machines, or
circumvent firewalls.

The following table gives an overview of the known attacks and whether the
various modules are vulnerable to them.

+---------------------------+----------------+-----------------+----------------+----------------+----------------+
| kind                      | sax            | etree           | minidom        | pulldom        | xmlrpc         |
|===========================|================|=================|================|================|================|
| billion laughs            | *Vulnerable*   | *Vulnerable*    | *Vulnerable*   | *Vulnerable*   | *Vulnerable*   |
+---------------------------+----------------+-----------------+----------------+----------------+----------------+
| quadratic blowup          | *Vulnerable*   | *Vulnerable*    | *Vulnerable*   | *Vulnerable*   | *Vulnerable*   |
+---------------------------+----------------+-----------------+----------------+----------------+----------------+
| external entity expansion | Safe (4)       | Safe    (1)     | Safe    (2)    | Safe (4)       | Safe    (3)    |
+---------------------------+----------------+-----------------+----------------+----------------+----------------+
| |:en.wikipedia.org/wiki/  | Safe (4)       | Safe            | Safe           | Safe (4)       | Safe           |
| Document_type_definition  |                |                 |                |                |                |
| :DTD| retrieval           |                |                 |                |                |                |
+---------------------------+----------------+-----------------+----------------+----------------+----------------+
| decompression bomb        | Safe           | Safe            | Safe           | Safe           | *Vulnerable*   |
+---------------------------+----------------+-----------------+----------------+----------------+----------------+

1. |:library/xml.etree.elementtree.txt/module-xml.etree.ElementTree:xml.etree.ElementTree| doesn’t expand external entities and raises a "
   ParserError" when an entity occurs.

2. |:library/xml.dom.minidom.txt/module-xml.dom.minidom:xml.dom.minidom| doesn’t expand external entities and simply returns the
   unexpanded entity verbatim.

3. "xmlrpclib" doesn’t expand external entities and omits them.

4. Since Python 3.7.1, external general entities are no longer processed by
   default.

billion laughs / exponential entity expansion
   The |:en.wikipedia.org/wiki/Billion_laughs:Billion Laughs| attack – also known as exponential entity expansion – uses
   multiple levels of nested entities. Each entity refers to another entity several
   times, and the final entity definition contains a small string. The exponential
   expansion results in several gigabytes of text and consumes lots of memory and
   CPU time.

quadratic blowup entity expansion
   A quadratic blowup attack is similar to a |:en.wikipedia.org/wiki/Billion_laughs:Billion Laughs| attack; it abuses
   entity expansion, too. Instead of nested entities it repeats one large entity
   with a couple of thousand chars over and over again. The attack isn’t as
   efficient as the exponential case but it avoids triggering parser
   countermeasures that forbid deeply-nested entities.

external entity expansion
   Entity declarations can contain more than just text for replacement. They can
   also point to external resources or local files. The XML parser accesses the
   resource and embeds the content into the XML document.

|:en.wikipedia.org/wiki/Document_type_definition:DTD| retrieval
   Some XML libraries like Python’s |:library/xml.dom.pulldom.txt/module-xml.dom.pulldom:xml.dom.pulldom| retrieve document type
   definitions from remote or local locations. The feature has similar implications
   as the external entity expansion issue.

decompression bomb
   Decompression bombs (aka |:en.wikipedia.org/wiki/Zip_bomb:ZIP bomb|) apply to all XML libraries that can parse
   compressed XML streams such as gzipped HTTP streams or LZMA-compressed files.
   For an attacker it can reduce the amount of transmitted data by three magnitudes
   or more.

The documentation for |:pypi.org/project/defusedxml:defusedxml| on PyPI has further information about all
known attack vectors with examples and references.

*|defusedxml-package:⚓|* # the-defusedxml-package:The "defusedxml" Package

|:pypi.org/project/defusedxml:defusedxml| is a pure Python package with modified subclasses of all stdlib XML
parsers that prevent any potentially malicious operation. Use of this package is
recommended for any server code that parses untrusted XML data. The package also
ships with example exploits and extended documentation on more XML exploits such
as XPath injection.

*|defusedxml:⚓|* *|billion-laughs:⚓|* *|zip-bomb:⚓|* *|dtd:⚓|*



